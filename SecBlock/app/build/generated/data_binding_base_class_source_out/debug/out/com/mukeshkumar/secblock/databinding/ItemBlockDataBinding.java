// Generated by view binder compiler. Do not edit!
package com.mukeshkumar.secblock.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mukeshkumar.secblock.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBlockDataBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView txtData;

  @NonNull
  public final TextView txtHash;

  @NonNull
  public final TextView txtIndex;

  @NonNull
  public final TextView txtPreviousHash;

  @NonNull
  public final TextView txtTimestamp;

  private ItemBlockDataBinding(@NonNull FrameLayout rootView, @NonNull TextView txtData,
      @NonNull TextView txtHash, @NonNull TextView txtIndex, @NonNull TextView txtPreviousHash,
      @NonNull TextView txtTimestamp) {
    this.rootView = rootView;
    this.txtData = txtData;
    this.txtHash = txtHash;
    this.txtIndex = txtIndex;
    this.txtPreviousHash = txtPreviousHash;
    this.txtTimestamp = txtTimestamp;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBlockDataBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBlockDataBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_block_data, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBlockDataBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.txt_data;
      TextView txtData = ViewBindings.findChildViewById(rootView, id);
      if (txtData == null) {
        break missingId;
      }

      id = R.id.txt_hash;
      TextView txtHash = ViewBindings.findChildViewById(rootView, id);
      if (txtHash == null) {
        break missingId;
      }

      id = R.id.txt_index;
      TextView txtIndex = ViewBindings.findChildViewById(rootView, id);
      if (txtIndex == null) {
        break missingId;
      }

      id = R.id.txt_previous_hash;
      TextView txtPreviousHash = ViewBindings.findChildViewById(rootView, id);
      if (txtPreviousHash == null) {
        break missingId;
      }

      id = R.id.txt_timestamp;
      TextView txtTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (txtTimestamp == null) {
        break missingId;
      }

      return new ItemBlockDataBinding((FrameLayout) rootView, txtData, txtHash, txtIndex,
          txtPreviousHash, txtTimestamp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
